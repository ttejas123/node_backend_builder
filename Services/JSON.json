{
  "dist": {
    "Result-frontend": {
      "src": {
        "component": {
          "Users": {
            "UsersDataTable.jsx": "\n      import { useEffect, useState } from 'react';\n      import DataTable from 'react-data-table-component';\n      import axios from 'axios';\n      import UsersForm from './UsersForm';\n  \n      const UsersDataTable = () => {\n        const [data, setData] = useState([]);\n        const [isModalOpen, setIsModalOpen] = useState(false);\n\n        const openModal = () => setIsModalOpen(true);\n        const closeModal = () => setIsModalOpen(false);\n        const toggle = () => setIsModalOpen((pre)=> (!pre));\n  \n        useEffect(() => {\n          fetchData();\n        }, []);\n  \n        const fetchData = async () => {\n          try {\n            const response = await axios.get('http://localhost:3000/v2_user');\n            setData(response.data.data);\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        };\n        \n        const handleDelete = async (id) => {\n          try {\n            await axios.delete('http://localhost:3000/v2_user/'+id);\n            fetchData()\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        };\n\n        const handleEdit = async (id) => {\n          try {\n            toggle(id)\n            // const response = await axios.delete('http://localhost:3000/v2_user/'+id);\n            fetchData()\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        };\n  \n        return (\n          <div>\n            <h2>Users DataTable</h2>\n            <button type=\"reset\" onClick={openModal}>+ Add Users</button>\n            <DataTable\n              columns={[\n                {\n        name: \"id\",\n        selector: \"id\",\n        sortable: true,\n      },{\n        name: \"firstname\",\n        selector: \"firstname\",\n        sortable: true,\n      },{\n        name: \"lastname\",\n        selector: \"lastname\",\n        sortable: true,\n      },{\n        name: \"email\",\n        selector: \"email\",\n        sortable: true,\n      },{\n        name: \"role\",\n        selector: \"role\",\n        sortable: true,\n      },{\n          name: \"status\",\n          selector: (row)=> {\n            return (row[\"status\"] ? <div>‚úÖ</div> : <div>‚ùå</div>)\n          },\n          sortable: true,\n        },{\n        name: \"lastlogin\",\n        selector: \"lastlogin\",\n        sortable: true,\n      },{\n        name: \"onboarding_id\",\n        selector: \"onboarding_id\",\n        sortable: true,\n      },\n                {\n                    \"name\": \"Edit\",\n                    \"selector\": (row) => {\n                      return <div onClick={()=> handleEdit(row.id)}>‚úèÔ∏è</div>;\n                    }\n                },\n                {\n                  \"name\": \"Delete\",\n                  \"selector\": (row) => {\n                    return <div onClick={()=> handleDelete(row.id)}>üóëÔ∏è</div>;\n                  }\n                }\n              ]}\n              data={data}\n              pagination\n              highlightOnHover\n            />\n            <UsersForm isOpen={isModalOpen} onRequestClose={closeModal} toggle={toggle} />\n          </div>\n        );\n      };\n  \n      export default UsersDataTable;\n    ",
            "UsersForm.jsx": "\n  /* eslint-disable react/prop-types */\n  import { useState } from 'react';\n  import axios from 'axios';\n  import { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\n  import '../../assets/FormStyles.scss'\n  \n  const UsersForm = ({ isOpen, onRequestClose, toggle, ...args }) => {\n    const [formData, setFormData] = useState({});\n  \n    const handleSubmit = async () => {\n      try {\n        const response = await axios.post('http://localhost:3000/v2_user', { data: [formData] });\n        console.log(response.data);\n        onRequestClose(); // Close the modal after successful submission\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n  \n    const closeBtn = (\n      <Button className=\"close\" onClick={onRequestClose} type=\"button\">\n        &times;\n      </Button>\n    );\n  \n    return (\n  \n      <Modal className='card card--accent p-0'  isOpen={isOpen} toggle={onRequestClose} {...args}>\n        <ModalHeader toggle={toggle} close={closeBtn}>Users Form</ModalHeader>\n        <ModalBody className='w-100'>\n          <form onSubmit={handleSubmit}>\n            \n<div key=\"firstname\">\n          <label className=\"input\">firstname:</label>\n          <input\n              className='input__field'\n              type=\"string\"\n              name=\"firstname\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"lastname\">\n          <label className=\"input\">lastname:</label>\n          <input\n              className='input__field'\n              type=\"string\"\n              name=\"lastname\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"email\">\n          <label className=\"input\">email:</label>\n          <input\n              className='input__field'\n              type=\"string\"\n              name=\"email\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"role\">\n          <label className=\"input\">role:</label>\n          <input\n              className='input__field'\n              type=\"string\"\n              name=\"role\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"status\">\n          <label className=\"input\">status:</label>\n          \n              <input \n              className='input__field'\n              type=\"checkbox\" \n              name=\"status\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.checked })}\n              />\n              \n        </div>\n<div key=\"lastlogin\">\n          <label className=\"input\">lastlogin:</label>\n          <input\n              className='input__field'\n              type=\"string\"\n              name=\"lastlogin\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"onboarding_id\">\n          <label className=\"input\">onboarding_id:</label>\n          <input\n              className='input__field'\n              type=\"number\"\n              name=\"onboarding_id\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n            <Button className='mt-3 w-25 d-flex justify-content-center' type=\"submit\">Submit</Button>\n          </form>\n        </ModalBody>\n      </Modal>\n  \n        \n    );\n  };\n  \n  export default UsersForm;\n    "
          },
          "Onboarding": {
            "OnboardingDataTable.jsx": "\n      import { useEffect, useState } from 'react';\n      import DataTable from 'react-data-table-component';\n      import axios from 'axios';\n      import OnboardingForm from './OnboardingForm';\n  \n      const OnboardingDataTable = () => {\n        const [data, setData] = useState([]);\n        const [isModalOpen, setIsModalOpen] = useState(false);\n\n        const openModal = () => setIsModalOpen(true);\n        const closeModal = () => setIsModalOpen(false);\n        const toggle = () => setIsModalOpen((pre)=> (!pre));\n  \n        useEffect(() => {\n          fetchData();\n        }, []);\n  \n        const fetchData = async () => {\n          try {\n            const response = await axios.get('http://localhost:3000/onboarding_info');\n            setData(response.data.data);\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        };\n        \n        const handleDelete = async (id) => {\n          try {\n            await axios.delete('http://localhost:3000/onboarding_info/'+id);\n            fetchData()\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        };\n\n        const handleEdit = async (id) => {\n          try {\n            toggle(id)\n            // const response = await axios.delete('http://localhost:3000/onboarding_info/'+id);\n            fetchData()\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        };\n  \n        return (\n          <div>\n            <h2>Onboarding DataTable</h2>\n            <button type=\"reset\" onClick={openModal}>+ Add Onboarding</button>\n            <DataTable\n              columns={[\n                {\n        name: \"id\",\n        selector: \"id\",\n        sortable: true,\n      },{\n        name: \"client\",\n        selector: \"client\",\n        sortable: true,\n      },{\n        name: \"script_url\",\n        selector: \"script_url\",\n        sortable: true,\n      },{\n        name: \"web_account_id\",\n        selector: \"web_account_id\",\n        sortable: true,\n      },{\n        name: \"web_id\",\n        selector: \"web_id\",\n        sortable: true,\n      },{\n          name: \"validated\",\n          selector: (row)=> {\n            return (row[\"validated\"] ? <div>‚úÖ</div> : <div>‚ùå</div>)\n          },\n          sortable: true,\n        },{\n          name: \"status\",\n          selector: (row)=> {\n            return (row[\"status\"] ? <div>‚úÖ</div> : <div>‚ùå</div>)\n          },\n          sortable: true,\n        },{\n          name: \"isdashboardready\",\n          selector: (row)=> {\n            return (row[\"isdashboardready\"] ? <div>‚úÖ</div> : <div>‚ùå</div>)\n          },\n          sortable: true,\n        },\n                {\n                    \"name\": \"Edit\",\n                    \"selector\": (row) => {\n                      return <div onClick={()=> handleEdit(row.id)}>‚úèÔ∏è</div>;\n                    }\n                },\n                {\n                  \"name\": \"Delete\",\n                  \"selector\": (row) => {\n                    return <div onClick={()=> handleDelete(row.id)}>üóëÔ∏è</div>;\n                  }\n                }\n              ]}\n              data={data}\n              pagination\n              highlightOnHover\n            />\n            <OnboardingForm isOpen={isModalOpen} onRequestClose={closeModal} toggle={toggle} />\n          </div>\n        );\n      };\n  \n      export default OnboardingDataTable;\n    ",
            "OnboardingForm.jsx": "\n  /* eslint-disable react/prop-types */\n  import { useState } from 'react';\n  import axios from 'axios';\n  import { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\n  import '../../assets/FormStyles.scss'\n  \n  const OnboardingForm = ({ isOpen, onRequestClose, toggle, ...args }) => {\n    const [formData, setFormData] = useState({});\n  \n    const handleSubmit = async () => {\n      try {\n        const response = await axios.post('http://localhost:3000/onboarding_info', { data: [formData] });\n        console.log(response.data);\n        onRequestClose(); // Close the modal after successful submission\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n  \n    const closeBtn = (\n      <Button className=\"close\" onClick={onRequestClose} type=\"button\">\n        &times;\n      </Button>\n    );\n  \n    return (\n  \n      <Modal className='card card--accent p-0'  isOpen={isOpen} toggle={onRequestClose} {...args}>\n        <ModalHeader toggle={toggle} close={closeBtn}>Users Form</ModalHeader>\n        <ModalBody className='w-100'>\n          <form onSubmit={handleSubmit}>\n            \n<div key=\"client\">\n          <label className=\"input\">client:</label>\n          <input\n              className='input__field'\n              type=\"string\"\n              name=\"client\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"script_url\">\n          <label className=\"input\">script_url:</label>\n          <input\n              className='input__field'\n              type=\"string\"\n              name=\"script_url\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"web_account_id\">\n          <label className=\"input\">web_account_id:</label>\n          <input\n              className='input__field'\n              type=\"string\"\n              name=\"web_account_id\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"web_id\">\n          <label className=\"input\">web_id:</label>\n          <input\n              className='input__field'\n              type=\"string\"\n              name=\"web_id\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"validated\">\n          <label className=\"input\">validated:</label>\n          \n              <input \n              className='input__field'\n              type=\"checkbox\" \n              name=\"validated\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.checked })}\n              />\n              \n        </div>\n<div key=\"status\">\n          <label className=\"input\">status:</label>\n          \n              <input \n              className='input__field'\n              type=\"checkbox\" \n              name=\"status\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.checked })}\n              />\n              \n        </div>\n<div key=\"isdashboardready\">\n          <label className=\"input\">isdashboardready:</label>\n          \n              <input \n              className='input__field'\n              type=\"checkbox\" \n              name=\"isdashboardready\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.checked })}\n              />\n              \n        </div>\n            <Button className='mt-3 w-25 d-flex justify-content-center' type=\"submit\">Submit</Button>\n          </form>\n        </ModalBody>\n      </Modal>\n  \n        \n    );\n  };\n  \n  export default OnboardingForm;\n    "
          },
          "Customers": {
            "CustomersDataTable.jsx": "\n      import { useEffect, useState } from 'react';\n      import DataTable from 'react-data-table-component';\n      import axios from 'axios';\n      import CustomersForm from './CustomersForm';\n  \n      const CustomersDataTable = () => {\n        const [data, setData] = useState([]);\n        const [isModalOpen, setIsModalOpen] = useState(false);\n\n        const openModal = () => setIsModalOpen(true);\n        const closeModal = () => setIsModalOpen(false);\n        const toggle = () => setIsModalOpen((pre)=> (!pre));\n  \n        useEffect(() => {\n          fetchData();\n        }, []);\n  \n        const fetchData = async () => {\n          try {\n            const response = await axios.get('http://localhost:3000/customer');\n            setData(response.data.data);\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        };\n        \n        const handleDelete = async (id) => {\n          try {\n            await axios.delete('http://localhost:3000/customer/'+id);\n            fetchData()\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        };\n\n        const handleEdit = async (id) => {\n          try {\n            toggle(id)\n            // const response = await axios.delete('http://localhost:3000/customer/'+id);\n            fetchData()\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        };\n  \n        return (\n          <div>\n            <h2>Customers DataTable</h2>\n            <button type=\"reset\" onClick={openModal}>+ Add Customers</button>\n            <DataTable\n              columns={[\n                {\n        name: \"id\",\n        selector: \"id\",\n        sortable: true,\n      },{\n        name: \"first_name\",\n        selector: \"first_name\",\n        sortable: true,\n      },{\n        name: \"last_name\",\n        selector: \"last_name\",\n        sortable: true,\n      },{\n        name: \"age\",\n        selector: \"age\",\n        sortable: true,\n      },{\n        name: \"country\",\n        selector: \"country\",\n        sortable: true,\n      },\n                {\n                    \"name\": \"Edit\",\n                    \"selector\": (row) => {\n                      return <div onClick={()=> handleEdit(row.id)}>‚úèÔ∏è</div>;\n                    }\n                },\n                {\n                  \"name\": \"Delete\",\n                  \"selector\": (row) => {\n                    return <div onClick={()=> handleDelete(row.id)}>üóëÔ∏è</div>;\n                  }\n                }\n              ]}\n              data={data}\n              pagination\n              highlightOnHover\n            />\n            <CustomersForm isOpen={isModalOpen} onRequestClose={closeModal} toggle={toggle} />\n          </div>\n        );\n      };\n  \n      export default CustomersDataTable;\n    ",
            "CustomersForm.jsx": "\n  /* eslint-disable react/prop-types */\n  import { useState } from 'react';\n  import axios from 'axios';\n  import { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\n  import '../../assets/FormStyles.scss'\n  \n  const CustomersForm = ({ isOpen, onRequestClose, toggle, ...args }) => {\n    const [formData, setFormData] = useState({});\n  \n    const handleSubmit = async () => {\n      try {\n        const response = await axios.post('http://localhost:3000/customer', { data: [formData] });\n        console.log(response.data);\n        onRequestClose(); // Close the modal after successful submission\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n  \n    const closeBtn = (\n      <Button className=\"close\" onClick={onRequestClose} type=\"button\">\n        &times;\n      </Button>\n    );\n  \n    return (\n  \n      <Modal className='card card--accent p-0'  isOpen={isOpen} toggle={onRequestClose} {...args}>\n        <ModalHeader toggle={toggle} close={closeBtn}>Users Form</ModalHeader>\n        <ModalBody className='w-100'>\n          <form onSubmit={handleSubmit}>\n            \n<div key=\"first_name\">\n          <label className=\"input\">first_name:</label>\n          <input\n              className='input__field'\n              type=\"string\"\n              name=\"first_name\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"last_name\">\n          <label className=\"input\">last_name:</label>\n          <input\n              className='input__field'\n              type=\"string\"\n              name=\"last_name\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"age\">\n          <label className=\"input\">age:</label>\n          <input\n              className='input__field'\n              type=\"number\"\n              name=\"age\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"country\">\n          <label className=\"input\">country:</label>\n          <input\n              className='input__field'\n              type=\"string\"\n              name=\"country\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n            <Button className='mt-3 w-25 d-flex justify-content-center' type=\"submit\">Submit</Button>\n          </form>\n        </ModalBody>\n      </Modal>\n  \n        \n    );\n  };\n  \n  export default CustomersForm;\n    "
          },
          "Orders": {
            "OrdersDataTable.jsx": "\n      import { useEffect, useState } from 'react';\n      import DataTable from 'react-data-table-component';\n      import axios from 'axios';\n      import OrdersForm from './OrdersForm';\n  \n      const OrdersDataTable = () => {\n        const [data, setData] = useState([]);\n        const [isModalOpen, setIsModalOpen] = useState(false);\n\n        const openModal = () => setIsModalOpen(true);\n        const closeModal = () => setIsModalOpen(false);\n        const toggle = () => setIsModalOpen((pre)=> (!pre));\n  \n        useEffect(() => {\n          fetchData();\n        }, []);\n  \n        const fetchData = async () => {\n          try {\n            const response = await axios.get('http://localhost:3000/order');\n            setData(response.data.data);\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        };\n        \n        const handleDelete = async (id) => {\n          try {\n            await axios.delete('http://localhost:3000/order/'+id);\n            fetchData()\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        };\n\n        const handleEdit = async (id) => {\n          try {\n            toggle(id)\n            // const response = await axios.delete('http://localhost:3000/order/'+id);\n            fetchData()\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        };\n  \n        return (\n          <div>\n            <h2>Orders DataTable</h2>\n            <button type=\"reset\" onClick={openModal}>+ Add Orders</button>\n            <DataTable\n              columns={[\n                {\n        name: \"id\",\n        selector: \"id\",\n        sortable: true,\n      },{\n        name: \"item\",\n        selector: \"item\",\n        sortable: true,\n      },{\n        name: \"amount\",\n        selector: \"amount\",\n        sortable: true,\n      },{\n        name: \"customer_id\",\n        selector: \"customer_id\",\n        sortable: true,\n      },\n                {\n                    \"name\": \"Edit\",\n                    \"selector\": (row) => {\n                      return <div onClick={()=> handleEdit(row.id)}>‚úèÔ∏è</div>;\n                    }\n                },\n                {\n                  \"name\": \"Delete\",\n                  \"selector\": (row) => {\n                    return <div onClick={()=> handleDelete(row.id)}>üóëÔ∏è</div>;\n                  }\n                }\n              ]}\n              data={data}\n              pagination\n              highlightOnHover\n            />\n            <OrdersForm isOpen={isModalOpen} onRequestClose={closeModal} toggle={toggle} />\n          </div>\n        );\n      };\n  \n      export default OrdersDataTable;\n    ",
            "OrdersForm.jsx": "\n  /* eslint-disable react/prop-types */\n  import { useState } from 'react';\n  import axios from 'axios';\n  import { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\n  import '../../assets/FormStyles.scss'\n  \n  const OrdersForm = ({ isOpen, onRequestClose, toggle, ...args }) => {\n    const [formData, setFormData] = useState({});\n  \n    const handleSubmit = async () => {\n      try {\n        const response = await axios.post('http://localhost:3000/order', { data: [formData] });\n        console.log(response.data);\n        onRequestClose(); // Close the modal after successful submission\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n  \n    const closeBtn = (\n      <Button className=\"close\" onClick={onRequestClose} type=\"button\">\n        &times;\n      </Button>\n    );\n  \n    return (\n  \n      <Modal className='card card--accent p-0'  isOpen={isOpen} toggle={onRequestClose} {...args}>\n        <ModalHeader toggle={toggle} close={closeBtn}>Users Form</ModalHeader>\n        <ModalBody className='w-100'>\n          <form onSubmit={handleSubmit}>\n            \n<div key=\"item\">\n          <label className=\"input\">item:</label>\n          <input\n              className='input__field'\n              type=\"string\"\n              name=\"item\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"amount\">\n          <label className=\"input\">amount:</label>\n          <input\n              className='input__field'\n              type=\"number\"\n              name=\"amount\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"customer_id\">\n          <label className=\"input\">customer_id:</label>\n          <input\n              className='input__field'\n              type=\"number\"\n              name=\"customer_id\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n            <Button className='mt-3 w-25 d-flex justify-content-center' type=\"submit\">Submit</Button>\n          </form>\n        </ModalBody>\n      </Modal>\n  \n        \n    );\n  };\n  \n  export default OrdersForm;\n    "
          },
          "Alarms": {
            "AlarmsDataTable.jsx": "\n      import { useEffect, useState } from 'react';\n      import DataTable from 'react-data-table-component';\n      import axios from 'axios';\n      import AlarmsForm from './AlarmsForm';\n  \n      const AlarmsDataTable = () => {\n        const [data, setData] = useState([]);\n        const [isModalOpen, setIsModalOpen] = useState(false);\n\n        const openModal = () => setIsModalOpen(true);\n        const closeModal = () => setIsModalOpen(false);\n        const toggle = () => setIsModalOpen((pre)=> (!pre));\n  \n        useEffect(() => {\n          fetchData();\n        }, []);\n  \n        const fetchData = async () => {\n          try {\n            const response = await axios.get('http://localhost:3000/alarm');\n            setData(response.data.data);\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        };\n        \n        const handleDelete = async (id) => {\n          try {\n            await axios.delete('http://localhost:3000/alarm/'+id);\n            fetchData()\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        };\n\n        const handleEdit = async (id) => {\n          try {\n            toggle(id)\n            // const response = await axios.delete('http://localhost:3000/alarm/'+id);\n            fetchData()\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        };\n  \n        return (\n          <div>\n            <h2>Alarms DataTable</h2>\n            <button type=\"reset\" onClick={openModal}>+ Add Alarms</button>\n            <DataTable\n              columns={[\n                {\n        name: \"id\",\n        selector: \"id\",\n        sortable: true,\n      },{\n        name: \"alarm_type\",\n        selector: \"alarm_type\",\n        sortable: true,\n      },{\n        name: \"drop_percentage\",\n        selector: \"drop_percentage\",\n        sortable: true,\n      },{\n        name: \"alarm_count\",\n        selector: \"alarm_count\",\n        sortable: true,\n      },{\n          name: \"solved\",\n          selector: (row)=> {\n            return (row[\"solved\"] ? <div>‚úÖ</div> : <div>‚ùå</div>)\n          },\n          sortable: true,\n        },\n                {\n                    \"name\": \"Edit\",\n                    \"selector\": (row) => {\n                      return <div onClick={()=> handleEdit(row.id)}>‚úèÔ∏è</div>;\n                    }\n                },\n                {\n                  \"name\": \"Delete\",\n                  \"selector\": (row) => {\n                    return <div onClick={()=> handleDelete(row.id)}>üóëÔ∏è</div>;\n                  }\n                }\n              ]}\n              data={data}\n              pagination\n              highlightOnHover\n            />\n            <AlarmsForm isOpen={isModalOpen} onRequestClose={closeModal} toggle={toggle} />\n          </div>\n        );\n      };\n  \n      export default AlarmsDataTable;\n    ",
            "AlarmsForm.jsx": "\n  /* eslint-disable react/prop-types */\n  import { useState } from 'react';\n  import axios from 'axios';\n  import { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\n  import '../../assets/FormStyles.scss'\n  \n  const AlarmsForm = ({ isOpen, onRequestClose, toggle, ...args }) => {\n    const [formData, setFormData] = useState({});\n  \n    const handleSubmit = async () => {\n      try {\n        const response = await axios.post('http://localhost:3000/alarm', { data: [formData] });\n        console.log(response.data);\n        onRequestClose(); // Close the modal after successful submission\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n  \n    const closeBtn = (\n      <Button className=\"close\" onClick={onRequestClose} type=\"button\">\n        &times;\n      </Button>\n    );\n  \n    return (\n  \n      <Modal className='card card--accent p-0'  isOpen={isOpen} toggle={onRequestClose} {...args}>\n        <ModalHeader toggle={toggle} close={closeBtn}>Users Form</ModalHeader>\n        <ModalBody className='w-100'>\n          <form onSubmit={handleSubmit}>\n            \n<div key=\"alarm_type\">\n          <label className=\"input\">alarm_type:</label>\n          <input\n              className='input__field'\n              type=\"string\"\n              name=\"alarm_type\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"drop_percentage\">\n          <label className=\"input\">drop_percentage:</label>\n          <input\n              className='input__field'\n              type=\"number\"\n              name=\"drop_percentage\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"alarm_count\">\n          <label className=\"input\">alarm_count:</label>\n          <input\n              className='input__field'\n              type=\"number\"\n              name=\"alarm_count\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\n            />\n        </div>\n<div key=\"solved\">\n          <label className=\"input\">solved:</label>\n          \n              <input \n              className='input__field'\n              type=\"checkbox\" \n              name=\"solved\"\n              onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.checked })}\n              />\n              \n        </div>\n            <Button className='mt-3 w-25 d-flex justify-content-center' type=\"submit\">Submit</Button>\n          </form>\n        </ModalBody>\n      </Modal>\n  \n        \n    );\n  };\n  \n  export default AlarmsForm;\n    "
          },
          "baseComponent": {
            "Sidebar.jsx": "\n      /* eslint-disable react/prop-types */\nimport { useState } from \"react\";\nimport { NavItem, NavLink, Nav } from \"reactstrap\";\n\nconst SideBar = ({ toggle, sidebarItems }) => {\n  const [selectedItem, setSelectedItem] = useState(sidebarItems[0]);\n\n  const handleItemClick = (item) => {\n    setSelectedItem(item);\n  };\n\n  return (\n    <div className={\"row\"} style={{height: \"100vh\"}}>\n      <div className=\"sidebar-header col-2 my-auto\" style={{borderRight: \"1px solid #000\"}}>\n        <span color=\"info\" onClick={toggle} style={{ color: \"#fff\" }}>\n          &times;\n        </span>\n        <h3>Sidebar</h3>\n        <div className=\"side-menu\">\n        <Nav vertical className=\"list-unstyled pb-3\">\n          {sidebarItems.map((item) => (\n            <>\n             \n                <NavItem>\n                  <NavLink\n                    tag={'a'}\n                    style={{cursor: \"pointer\"}}\n                    to={item.target}\n                    onClick={() => handleItemClick(item)}\n                  >\n                    {item.title}\n                  </NavLink>\n                </NavItem>\n            </>\n          ))}\n        </Nav>\n      </div>\n      </div>\n      <div className=\"col-10\">\n      {selectedItem && <selectedItem.component />}\n      </div>\n    </div>\n  );\n};\n\nexport default SideBar;\n      "
          }
        },
        "App.jsx": "\n\nimport UsersDataTable from './component/Users/UsersDataTable';\n        \n\nimport OnboardingDataTable from './component/Onboarding/OnboardingDataTable';\n        \n\nimport CustomersDataTable from './component/Customers/CustomersDataTable';\n        \n\nimport OrdersDataTable from './component/Orders/OrdersDataTable';\n        \n\nimport AlarmsDataTable from './component/Alarms/AlarmsDataTable';\n        \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SideBar from './component/baseComponent/Sidebar';\n\nconst App = () => {\n  const sidebarIntesm = [\n    \n      {\n        title: \"Users\",\n        target: \"/users\",\n        component: UsersDataTable,\n      },\n      \n\n      {\n        title: \"Onboarding\",\n        target: \"/onboarding\",\n        component: OnboardingDataTable,\n      },\n      \n\n      {\n        title: \"Customers\",\n        target: \"/customers\",\n        component: CustomersDataTable,\n      },\n      \n\n      {\n        title: \"Orders\",\n        target: \"/orders\",\n        component: OrdersDataTable,\n      },\n      \n\n      {\n        title: \"Alarms\",\n        target: \"/alarms\",\n        component: AlarmsDataTable,\n      },\n      \n  ]\nreturn (\n    <div>\n    <SideBar sidebarItems={sidebarIntesm} />\n    </div>\n);\n};\n\nexport default App;\n    ",
        "main.jsx": "\n      import React from 'react';\n      import ReactDOM from 'react-dom';\n      import App from './App';\n  \n      ReactDOM.render(\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>,\n        document.getElementById('root')\n      );\n    ",
        "assets": {
          "FormStyles.scss": "\n      @import url('https://rsms.me/inter/inter.css');\n\n:root {\n  --color-light: white;\n  --color-dark: #212121;\n  --color-signal: #fab700;\n  \n  --color-background: var(--color-light);\n  --color-text: var(--color-dark);\n  --color-accent: var(--color-signal);\n  \n  --size-bezel: .5rem;\n  --size-radius: 4px;\n  \n  line-height: 1.4;\n  \n  font-family: 'Inter', sans-serif;\n  font-size: calc(.6rem + .4vw);\n  color: var(--color-text);\n  background: var(--color-background);\n  font-weight: 300;\n  padding: 0 calc(var(--size-bezel) * 3);\n}\n\nh1, h2, h3 {\n  font-weight: 900;\n}\n\nmark {\n  background: var(--color-accent);\n  color: var(--color-text);\n  font-weight: bold;\n  padding: 0 0.2em;\n}\n\n.card {\n  background: var(--color-background);\n  padding: calc(4 * var(--size-bezel));\n  margin-top: calc(4 * var(--size-bezel));\n  border-radius: var(--size-radius);\n  border: 3px solid var(--color-shadow, currentColor);\n  box-shadow: .5rem .5rem 0 var(--color-shadow, currentColor);\n  \n  &--inverted {\n    --color-background: var(--color-dark);\n    color: var(--color-light);\n    --color-shadow: var(--color-accent);\n  }\n  \n  &--accent {\n    --color-background: var(--color-signal);\n    --color-accent: var(--color-light);\n    color: var(--color-dark);\n  }\n  \n  *:first-child {\n    margin-top: 0;\n  }\n}\n\n\n.l-design-widht {\n  max-width: 40rem;\n  padding: 1rem;\n}\n\n.input {\n  position: relative;\n  \n  &__label {\n    position: absolute;\n    left: 0;\n    top: 0;\n    padding: calc(var(--size-bezel) * 0.75) calc(var(--size-bezel) * .5);\n    margin: calc(var(--size-bezel) * 0.75 + 3px) calc(var(--size-bezel) * .5);\n    background: pink;\n    white-space: nowrap;\n    transform: translate(0, 0);\n    transform-origin: 0 0;\n    background: var(--color-background);\n    transition: transform 120ms ease-in;\n    font-weight: bold;\n    line-height: 1.2;\n  }\n  &__field {\n    box-sizing: border-box;\n    display: block;\n    width: 100%;\n    border: 3px solid currentColor;\n    padding: calc(var(--size-bezel) * 1.5) var(--size-bezel);\n    color: currentColor;\n    background: transparent;\n    border-radius: var(--size-radius);\n    \n    &:focus,\n    &:not(:placeholder-shown) {\n      & + .input__label {\n        transform: translate(.25rem, -65%) scale(.8);\n        color: var(--color-accent);\n      }\n    }\n  }\n}\n\n\n.button-group {\n  margin-top: calc(var(--size-bezel) * 2.5);\n}\n\nbutton {\n  color: currentColor;\n  padding: var(--size-bezel) calc(var(--size-bezel) * 2);\n  background: var(--color-accent);\n  border: none;\n  border-radius: var(--size-radius);\n  font-weight: 900;\n  \n  &[type=reset]{\n    background: var(--color-background);\n    font-weight: 200;\n  } \n}\n\nbutton + button {\n  margin-left: calc(var(--size-bezel) * 2);\n}\n\n.icon {\n  display: inline-block;\n  width: 1em; height: 1em;\n  margin-right: .5em;\n}\n\n.hidden {\n  display: none;\n}\n      "
        }
      },
      "vite.config.js": "\nimport { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [react()],\n})\n        ",
      "package.json": "\n        {\n            \"name\": \"dynamic_frontend_test_project\",\n            \"private\": true,\n            \"version\": \"0.0.0\",\n            \"type\": \"module\",\n            \"scripts\": {\n              \"dev\": \"vite\",\n              \"build\": \"vite build\",\n              \"lint\": \"eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0\",\n              \"preview\": \"vite preview\"\n            },\n            \"dependencies\": {\n              \"axios\": \"^1.6.2\",\n              \"react\": \"^18.2.0\",\n              \"react-dom\": \"^18.2.0\"\n            },\n            \"devDependencies\": {\n              \"@types/react\": \"^18.2.37\",\n              \"@types/react-dom\": \"^18.2.15\",\n              \"@vitejs/plugin-react\": \"^4.2.0\",\n              \"eslint\": \"^8.53.0\",\n              \"eslint-plugin-react\": \"^7.33.2\",\n              \"eslint-plugin-react-hooks\": \"^4.6.0\",\n              \"eslint-plugin-react-refresh\": \"^0.4.4\",\n              \"vite\": \"^5.0.0\",\n              \"react-modal\": \"^3.16.1\",\n              \"sass\": \"^1.69.5\",\n              \"bootstrap\": \"^5.3.2\",      \n              \"react-data-table-component\": \"^7.5.4\",\n              \"reactstrap\": \"^9.2.1\"\n            }\n          }\n          \n        ",
      "index.html": "\n        <!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"UTF-8\" />\n            <link rel=\"icon\" type=\"image/svg+xml\" href=\"/vite.svg\" />\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n            <title>Vite + React</title>\n            <link\n              rel=\"stylesheet\"\n              href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css\"\n            />\n          </head>\n          <body>\n            <div id=\"root\"></div>\n            <script type=\"module\" src=\"/src/main.jsx\"></script>\n          </body>\n        </html>\n        ",
      ".gitignore": "\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\npnpm-debug.log*\nlerna-debug.log*\n\nnode_modules\ndist\ndist-ssr\n*.local\n\n# Editor directories and files\n.vscode/*\n!.vscode/extensions.json\n.idea\n.DS_Store\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw?\n\n    ",
      ".eslintrc.cjs": "\n    module.exports = {\n        root: true,\n        env: { browser: true, es2020: true },\n        extends: [\n          'eslint:recommended',\n          'plugin:react/recommended',\n          'plugin:react/jsx-runtime',\n          'plugin:react-hooks/recommended',\n        ],\n        ignorePatterns: ['dist', '.eslintrc.cjs'],\n        parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },\n        settings: { react: { version: '18.2' } },\n        plugins: ['react-refresh'],\n        rules: {\n          'react-refresh/only-export-components': [\n            'warn',\n            { allowConstantExport: true },\n          ],\n        },\n      }\n    "
    }
  }
}